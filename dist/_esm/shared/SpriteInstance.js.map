{"version":3,"file":"SpriteInstance.js","sourceRoot":"","sources":["../../../src/shared/SpriteInstance.ts"],"names":[],"mappings":"AAAA,OAAO,YAAY,MAAM,uBAAuB,CAAC;AAIjD,MAAM,OAAO,cAAc;IAMzB,YAAY,MAAc;QAJnB,UAAK,GAAW,CAAC,CAAC;QAClB,UAAK,GAAW,CAAC,CAAC;QACjB,cAAS,GAAW,IAAI,CAAC,GAAG,EAAE,CAAC;QAGrC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAEO,kBAAkB;QACxB,YAAY,CAAC,EAAE,CAAC,aAAa,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;IAC3D,CAAC;IAEO,WAAW;QACjB,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACnC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACnB,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;gBACpC,IACE,IAAI,CAAC,GAAG,EAAE;oBACV,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,EAC/D;oBACA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;oBAC5B,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;wBACjC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;qBAChB;yBAAM;wBACL,IAAI,CAAC,KAAK,EAAE,CAAC;qBACd;iBACF;aACF;SACF;IACH,CAAC;IAEM,OAAO;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;IAC/B,CAAC;IAEM,IAAI,CACT,MAAc,EACd,CAAS,EACT,CAAS,EACT,OAA2B,EAAE;QAE7B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,kBAC3B,KAAK,EAAE,IAAI,CAAC,KAAK,IACd,IAAI,EACP,CAAC;IACL,CAAC;CACF","sourcesContent":["import eventEmitter from \"../utils/eventEmitter\";\nimport { Canvas } from \"./Canvas\";\nimport { iSpriteDrawOptions, iSpriteInfo, Sprite } from \"../modules/sprite\";\n\nexport class SpriteInstance {\n  private sprite: Sprite;\n  public frame: number = 0;\n  public speed: number = 1;\n  private frameTime: number = Date.now();\n\n  constructor(sprite: Sprite) {\n    this.sprite = sprite;\n    this.initEventListeners();\n  }\n\n  private initEventListeners() {\n    eventEmitter.on(\"afterRender\", () => this.updateFrame());\n  }\n\n  private updateFrame(): void {\n    const info = this.sprite.getInfo();\n    if (info.frames > 1) {\n      if (this.speed > 0 && info.speed > 0) {\n        if (\n          Date.now() >=\n          this.frameTime + 1000 * (info.speed / info.frames) * this.speed\n        ) {\n          this.frameTime = Date.now();\n          if (this.frame == info.frames - 1) {\n            this.frame = 0;\n          } else {\n            this.frame++;\n          }\n        }\n      }\n    }\n  }\n\n  public getInfo(): iSpriteInfo {\n    return this.sprite.getInfo();\n  }\n\n  public draw(\n    canvas: Canvas,\n    x: number,\n    y: number,\n    opts: iSpriteDrawOptions = {}\n  ): void {\n    this.sprite.draw(canvas, x, y, {\n      frame: this.frame,\n      ...opts,\n    });\n  }\n}\n"]}