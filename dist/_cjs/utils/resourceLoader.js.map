{"version":3,"file":"resourceLoader.js","sourceRoot":"","sources":["../../../src/utils/resourceLoader.ts"],"names":[],"mappings":";;AAQA,MAAM,cAAc;IAApB;QACU,cAAS,GAAU,EAAE,CAAC;QACtB,kBAAa,GAAmB,EAAE,CAAC;QACnC,mBAAc,GAAe,EAAE,CAAC;IA+D1C,CAAC;IA7DQ,SAAS,CAAC,IAAuB;QACtC,IAAI,IAAI,YAAY,KAAK,EAAE;YACzB,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SACjD;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC3B;IACH,CAAC;IAED,8CAA8C;IACvC,aAAa,CAAC,WAAqC,IAAI;QAC5D,IAAI,CAAC,QAAQ,EAAE;YACb,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;SAC3B;QACD,IAAI,QAAQ,YAAY,KAAK,EAAE;YAC7B,KAAK,IAAI,CAAC,IAAI,QAAQ,EAAE;gBACtB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;aACzB;SACF;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;SACtB;IACH,CAAC;IAEO,KAAK,CAAC,GAAW;QACvB,IAAI,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE;YAC3B,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;SAChC;aAAM;YACL,MAAM,KAAK,GAAS;gBAClB,GAAG,EAAE,IAAI,KAAK,EAAE;gBAChB,EAAE,EAAE,IAAI;aACT,CAAC;YACF,KAAK,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,EAAE;gBACtB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC;gBACpC,IAAI,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,EAAE;oBACtB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,cAAc,EAAE;wBACjC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC;qBAC1B;iBACF;YACH,CAAC,CAAC;YACF,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;YAChC,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;YACpB,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAEM,GAAG,CAAC,GAAW;QACpB,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAEM,OAAO;QACZ,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,aAAa,EAAE;YAClC,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE;gBAClE,KAAK,GAAG,KAAK,CAAC;aACf;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAEM,OAAO,CAAC,IAAc;QAC3B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;CACF;AAED,MAAM,cAAc,GAAG,IAAI,cAAc,EAAE,CAAC;AAE5C,kBAAe,cAAc,CAAC","sourcesContent":["type tResourceCache = {\n  [key: string]: HTMLImageElement | Boolean;\n};\ninterface iImg {\n  img: HTMLImageElement;\n  rl: ResourceLoader;\n}\n\nclass ResourceLoader {\n  private loadQueue: any[] = [];\n  private resourceCache: tResourceCache = {};\n  private readyCallbacks: Function[] = [];\n\n  public addToLoad(item: string[] | string): void {\n    if (item instanceof Array) {\n      item.forEach((url) => this.loadQueue.push(url));\n    } else {\n      this.loadQueue.push(item);\n    }\n  }\n\n  // Load an image url or an array of image urls\n  public loadResources(urlOrArr: string | string[] | null = null): void {\n    if (!urlOrArr) {\n      urlOrArr = this.loadQueue;\n    }\n    if (urlOrArr instanceof Array) {\n      for (var k in urlOrArr) {\n        this._load(urlOrArr[k]);\n      }\n    } else {\n      this._load(urlOrArr);\n    }\n  }\n\n  private _load(url: string) {\n    if (this.resourceCache[url]) {\n      return this.resourceCache[url];\n    } else {\n      const image: iImg = {\n        img: new Image(),\n        rl: this,\n      };\n      image.img.onload = () => {\n        this.resourceCache[url] = image.img;\n        if (image.rl.isReady()) {\n          for (var k in this.readyCallbacks) {\n            this.readyCallbacks[k]();\n          }\n        }\n      };\n      this.resourceCache[url] = false;\n      image.img.src = url;\n      return null;\n    }\n  }\n\n  public get(url: string): HTMLImageElement | Boolean {\n    return this.resourceCache[url];\n  }\n\n  public isReady(): Boolean {\n    let ready = true;\n    for (const k in this.resourceCache) {\n      if (this.resourceCache.hasOwnProperty(k) && !this.resourceCache[k]) {\n        ready = false;\n      }\n    }\n    return ready;\n  }\n\n  public onReady(func: Function): void {\n    this.readyCallbacks.push(func);\n  }\n}\n\nconst resourceLoader = new ResourceLoader();\n\nexport default resourceLoader;\n"]}