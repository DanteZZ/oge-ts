{"version":3,"file":"sprite.js","sourceRoot":"","sources":["../../../src/modules/sprite.ts"],"names":[],"mappings":";;;AAEA,6DAA0D;AAgB1D,MAAa,MAAM;IAUjB,YACE,KAAY,EACZ,OAAsB,IAAI,EAC1B,SAAiB,CAAC,EAClB,UAAkB,CAAC,EACnB,UAAkB,CAAC,EACnB,QAAgB,CAAC,EACjB,SAAiB,CAAC,EAClB,QAAgB,CAAC;QAjBV,SAAI,GAAkB,IAAI,CAAC;QAE5B,UAAK,GAAW,CAAC,CAAC;QAClB,WAAM,GAAW,CAAC,CAAC;QACnB,WAAM,GAAW,CAAC,CAAC;QACnB,YAAO,GAAW,CAAC,CAAC;QACpB,YAAO,GAAW,CAAC,CAAC;QACpB,UAAK,GAAW,CAAC,CAAC;QAYxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAEM,cAAc;QACnB,OAAO,IAAI,+BAAc,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAEM,QAAQ,CAAC,KAAY;QAC1B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAEM,OAAO,CAAC,KAAa,EAAE,MAAc;QAC1C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAEM,SAAS,CAAC,OAAe,EAAE,OAAe;QAC/C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAEM,SAAS,CAAC,MAAc;QAC7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAEM,OAAO;QACZ,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;QACrC,IAAI,GAAG,YAAY,gBAAgB,EAAE;YACnC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAC;YACpC,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM,CAAC;YAEvC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnB,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;aACxC;YAED,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;SAC1B;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;SACpC;IACH,CAAC;IAEM,OAAO;QACZ,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC5B,uBACE,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,MAAM,EAAE,IAAI,CAAC,MAAM,EACnB,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,OAAO,EAAE,IAAI,CAAC,OAAO,IAClB,IAAI,EACP;IACJ,CAAC;IAEM,IAAI,CACT,MAAc,EACd,CAAS,EACT,CAAS,EACT,QAAuB,IAAI,EAC3B,QAAiB,EACjB,OAAgB,EAChB,MAAe,EACf,KAAc,EACd,MAAe;QAEf,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC3B,MAAM,CAAC,SAAS,CAAC;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,CAAC;YACD,CAAC;YACD,MAAM,EAAE,KAAK,IAAI,GAAG,CAAC,KAAK;YAC1B,OAAO,EAAE,MAAM,IAAI,GAAG,CAAC,MAAM;YAC7B,MAAM,EAAE,GAAG,CAAC,KAAK;YACjB,OAAO,EAAE,GAAG,CAAC,MAAM;YACnB,OAAO,EAAE,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,KAAK;YACjC,OAAO,EAAE,CAAC;YACV,QAAQ,EAAE,QAAQ;YAClB,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,OAAO;SACjB,CAAC,CAAC;IACL,CAAC;CACF;AA1GD,wBA0GC;AAED,MAAa,OAAO;IAElB;QACE,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IACM,MAAM,CACX,KAAY,EACZ,OAAsB,IAAI,EAC1B,SAAiB,CAAC,EAClB,UAAkB,CAAC,EACnB,UAAkB,CAAC,EACnB,QAAgB,CAAC,EACjB,SAAiB,CAAC,EAClB,QAAgB,CAAC;QAEjB,MAAM,MAAM,GAAG,IAAI,MAAM,CACvB,KAAK,EACL,IAAI,EACJ,MAAM,EACN,OAAO,EACP,OAAO,EACP,KAAK,EACL,MAAM,EACN,KAAK,CACN,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC1B,OAAO,MAAM,CAAC;IAChB,CAAC;IACM,GAAG,CAAC,IAAY;QACrB,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC;IACrE,CAAC;CACF;AA/BD,0BA+BC","sourcesContent":["import { Asset } from \"../utils/assets\";\nimport { Canvas } from \"../shared/Canvas\";\nimport { SpriteInstance } from \"../shared/SpriteInstance\";\n\ninterface iSpriteInfo {\n  speed: number;\n  width: number;\n  height: number;\n  frames: number;\n  centerX: number;\n  centerY: number;\n}\n\ninterface iSpriteSize {\n  width: number;\n  height: number;\n}\n\nexport class Sprite {\n  readonly name: string | null = null;\n  private asset: Asset;\n  private width: number = 0;\n  private height: number = 0;\n  private frames: number = 1;\n  private centerX: number = 0;\n  private centerY: number = 0;\n  private speed: number = 1;\n\n  constructor(\n    asset: Asset,\n    name: string | null = null,\n    frames: number = 1,\n    centerX: number = 0,\n    centerY: number = 0,\n    width: number = 0,\n    height: number = 0,\n    speed: number = 1\n  ) {\n    this.asset = asset;\n    this.speed = speed;\n    this.name = name;\n    this.width = width;\n    this.height = height;\n    this.frames = frames;\n    this.centerX = centerX;\n    this.centerY = centerY;\n  }\n\n  public createInstance(): SpriteInstance {\n    return new SpriteInstance(this);\n  }\n\n  public setAsset(asset: Asset): void {\n    this.asset = asset;\n  }\n\n  public setSize(width: number, height: number): void {\n    this.width = width;\n    this.height = height;\n  }\n\n  public setCenter(centerX: number, centerY: number): void {\n    this.centerX = centerX;\n    this.centerY = centerY;\n  }\n\n  public setFrames(frames: number): void {\n    this.frames = frames;\n  }\n\n  public getSize(): iSpriteSize {\n    const res = this.asset.getResource();\n    if (res instanceof HTMLImageElement) {\n      let width = this.width || res.width;\n      let height = this.height || res.height;\n\n      if (this.frames > 1) {\n        width = Math.ceil(width / this.frames);\n      }\n\n      return { width, height };\n    } else {\n      throw new Error(\"Undefined asset\");\n    }\n  }\n\n  public getInfo(): iSpriteInfo {\n    const size = this.getSize();\n    return {\n      speed: this.speed,\n      frames: this.frames,\n      centerX: this.centerX,\n      centerY: this.centerY,\n      ...size,\n    };\n  }\n\n  public draw(\n    canvas: Canvas,\n    x: number,\n    y: number,\n    frame: number | null = null,\n    rotation?: number,\n    opacity?: number,\n    filter?: string,\n    width?: number,\n    height?: number\n  ): void {\n    const inf = this.getInfo();\n    canvas.drawAsset({\n      asset: this.asset,\n      x,\n      y,\n      dWidth: width || inf.width,\n      dHeight: height || inf.height,\n      sWidth: inf.width,\n      sHeight: inf.height,\n      offsetX: (frame || 0) * inf.width,\n      offsetY: 0,\n      rotation: rotation,\n      filter: filter,\n      opacity: opacity,\n    });\n  }\n}\n\nexport class Sprites {\n  private sprites: Sprite[];\n  constructor() {\n    this.sprites = [];\n  }\n  public create(\n    asset: Asset,\n    name: string | null = null,\n    frames: number = 1,\n    centerX: number = 0,\n    centerY: number = 0,\n    width: number = 0,\n    height: number = 0,\n    speed: number = 1\n  ): Sprite {\n    const sprite = new Sprite(\n      asset,\n      name,\n      frames,\n      centerX,\n      centerY,\n      width,\n      height,\n      speed\n    );\n    this.sprites.push(sprite);\n    return sprite;\n  }\n  public get(name: string): Sprite | null {\n    return this.sprites.find((sprite) => sprite.name === name) || null;\n  }\n}\n"]}