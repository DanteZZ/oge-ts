{"version":3,"file":"GameObject.js","sourceRoot":"","sources":["../../../src/shared/GameObject.ts"],"names":[],"mappings":";;;AAAA,6DAA0D;AAc1D,MAAsB,UAAU;IAU9B,YAAY,UAA6B,EAAE;QARpC,SAAI,GAAkB,IAAI,CAAC;QAC3B,MAAC,GAAW,CAAC,CAAC;QACd,MAAC,GAAW,CAAC,CAAC;QACd,UAAK,GAAW,CAAC,CAAC;QAClB,WAAM,GAA0B,IAAI,CAAC;QAK1C,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE;YAC7C,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,MAAM,KAAU,CAAC;IACjB,MAAM,KAAU,CAAC;IAEjB,IAAI,CAAC,MAAe;QACzB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC3B,CAAC;IACM,WAAW,CAAC,MAAe;QAChC,IAAI,MAAM,IAAI,IAAI,CAAC,MAAM,YAAY,+BAAc,EAAE;YACnD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;SAC1C;IACH,CAAC;IAEM,OAAO;;QACZ,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,QAAQ,0CAAE,OAAO,EAAE,CAAC;QAC1B,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,0CAAE,OAAO,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAEM,SAAS,KAAU,CAAC;IAEpB,SAAS;QACd,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;SACjC;IACH,CAAC;IAEM,cAAc,CAAC,IAA+B;;QACnD,IAAI,CAAC,QAAQ,GAAG,MAAA,MAAA,IAAI,CAAC,MAAM,0CAAE,GAAG,0CAAE,cAAc,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACnE,CAAC;IAIM,SAAS,CACd,GAAwB,EACxB,gBAAyB,KAAK;QAE9B,IAAI,UAAU,GAAe,EAAE,CAAC;QAChC,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE;;gBAC/C,OAAA,GAAG,YAAY,UAAU;oBACvB,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,QAAQ;oBACpB,CAAC,CAAC,CAAA,MAAA,CAAC,CAAC,QAAQ,0CAAE,IAAI,MAAK,GAAG,CAAA;aAAA,CAC7B,CAAC;SACH;QACD,OAAO,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC;IAC1D,CAAC;IAEM,QAAQ,CAAC,IAAY;QAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAEM,UAAU,CAAC,MAAsB;QACtC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;CACF;AAvED,gCAuEC","sourcesContent":["import { SpriteInstance } from \"../shared/SpriteInstance\";\nimport { Canvas } from \"./Canvas\";\nimport { InstanceBuffer } from \"../modules/instance\";\nimport { Collider, iColliderOptions } from \"./Collider\";\n\ninterface iGameObjectParams {\n  [key: string]: any;\n  name?: string | null;\n  x?: number;\n  y?: number;\n  depth?: number;\n  collider?: Collider;\n}\n\nexport abstract class GameObject implements iGameObjectParams {\n  [key: string]: any;\n  public name: string | null = null;\n  public x: number = 0;\n  public y: number = 0;\n  public depth: number = 0;\n  public sprite: SpriteInstance | null = null;\n  private buffer?: InstanceBuffer;\n  public collider?: Collider;\n\n  constructor(another: iGameObjectParams = {}) {\n    Object.entries(another).forEach(([key, val]) => {\n      this[key] = val;\n    });\n  }\n\n  public create(): void {}\n  public update(): void {}\n\n  public draw(canvas?: Canvas): void {\n    this.defaultDraw(canvas);\n  }\n  public defaultDraw(canvas?: Canvas) {\n    if (canvas && this.sprite instanceof SpriteInstance) {\n      this.sprite.draw(canvas, this.x, this.y);\n    }\n  }\n\n  public destroy(): void {\n    this?.collider?.destroy();\n    this?.buffer?.destroy(this);\n  }\n\n  public onDestroy(): void {}\n\n  public getBuffer(): InstanceBuffer {\n    if (this.buffer) {\n      return this.buffer;\n    } else {\n      throw new Error(\"Empty buffer\");\n    }\n  }\n\n  public createCollider(opts: Partial<iColliderOptions>) {\n    this.collider = this.buffer?.app?.colliderBuffer.add(this, opts);\n  }\n\n  public isCollide(obj: GameObject | string, returnObjects?: false): boolean;\n  public isCollide(obj: GameObject | string, returnObjects?: true): Collider[];\n  public isCollide(\n    obj: GameObject | string,\n    returnObjects: boolean = false\n  ): Collider[] | boolean {\n    let collisions: Collider[] = [];\n    if (this.collider) {\n      collisions = this.collider.collides.filter((c) =>\n        obj instanceof GameObject\n          ? c === obj.collider\n          : c.instance?.name === obj\n      );\n    }\n    return returnObjects ? collisions : !!collisions.length;\n  }\n\n  public _setName(name: string): void {\n    this.name = name;\n  }\n\n  public _setBuffer(buffer: InstanceBuffer): void {\n    this.buffer = buffer;\n  }\n}\n"]}