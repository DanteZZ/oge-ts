{"version":3,"file":"graphic.js","sourceRoot":"","sources":["../../../src/utils/graphic.ts"],"names":[],"mappings":"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","sourcesContent":["import { iImageInfo } from \"../interfaces/graphic\";\nimport { Canvas } from \"../shared/Canvas\";\nimport eventEmitter from \"./eventEmitter\";\n\nexport default class Graphic {\n  private canvasList: Canvas[] = [];\n  private rootElement: HTMLElement;\n  private isRender: Boolean = false;\n\n  constructor(rootElement: HTMLElement) {\n    this.rootElement = rootElement;\n    rootElement.style.position = \"relative\";\n  }\n\n  private updateFrame(): void {\n    if (this.isRender) {\n      this.clear();\n      eventEmitter.emit(\"beforeRender\");\n      eventEmitter.emit(\"preRender\");\n      eventEmitter.emit(\"render\");\n      eventEmitter.emit(\"postRender\");\n      setTimeout(() => {\n        eventEmitter.emit(\"afterRender\");\n      }, 0);\n      this.restore();\n      window.requestAnimationFrame(() => {\n        this.updateFrame();\n      });\n    }\n  }\n\n  public stopRender(): void {\n    this.isRender = false;\n  }\n\n  public playRender(): void {\n    this.isRender = true;\n    this.updateFrame();\n  }\n\n  public getCanvas(name: string): Canvas | null {\n    return this.canvasList?.find((item) => item.name === name) || null;\n  }\n\n  public createCanvas(\n    name: string,\n    width: number = 0,\n    height: number = 0\n  ): Canvas {\n    if (!this.getCanvas(name)) {\n      const canvas = new Canvas(this.rootElement, name, width, height);\n      this.canvasList.push(canvas);\n      return canvas;\n    } else {\n      throw new Error(`Canvas \"${name}\" already exist`);\n    }\n  }\n\n  public clear(): void {\n    this.canvasList.forEach((canvas) =>\n      canvas.ctx?.clearRect(0, 0, canvas.element.width, canvas.element.height)\n    );\n  }\n\n  public restore(): void {\n    this.canvasList.forEach((canvas) => canvas.ctx?.restore());\n  }\n\n  public setSize(name: string | Canvas, width: number, height: number) {\n    const canvas = typeof name === \"string\" ? this.getCanvas(name) : name;\n    if (canvas) {\n      canvas.setSize(width, height);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public setAllSizes(width: number, height: number) {\n    this.canvasList.forEach((canvas) => this.setSize(canvas, width, height));\n  }\n\n  public setOffset(name: string, x: number, y: number) {\n    const canvas = this.getCanvas(name);\n    if (canvas) {\n      canvas.setOffset(x, y);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public destroyCanvas(name: string | Canvas): void {\n    const canvas = typeof name === \"string\" ? this.getCanvas(name) : name;\n    if (canvas) {\n      canvas.element.remove();\n      this.canvasList = this.canvasList.filter(\n        (canvas) => canvas.name !== name\n      );\n    }\n  }\n\n  public destroyAll(): void {\n    this.canvasList.forEach((canvas) => this.destroyCanvas(canvas));\n  }\n\n  public drawAsset(info: iImageInfo): void {\n    if (info.canvas) {\n      let canvas =\n        info.canvas instanceof Canvas\n          ? info.canvas\n          : this.getCanvas(info.canvas);\n      canvas?.drawAsset(info);\n    }\n  }\n}\n"]}